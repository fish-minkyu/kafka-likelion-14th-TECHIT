[2024-02-18 14:01:50,486] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-02-18 14:01:50,511] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2024-02-18 14:01:50,514] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-02-18 14:01:50,520] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-02-18 14:01:50,536] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-02-18 14:01:50,544] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-02-18 14:01:50,562] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 77) (kafka.controller.KafkaController)
[2024-02-18 14:01:50,579] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-02-18 14:01:50,594] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-02-18 14:01:50,617] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-02-18 14:01:50,617] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-02-18 14:01:50,618] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-02-18 14:01:50,618] INFO [Controller id=0] Current list of topics in the cluster: HashSet(first-topic, fist-jb-topic) (kafka.controller.KafkaController)
[2024-02-18 14:01:50,619] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-02-18 14:01:50,622] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-02-18 14:01:50,622] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-02-18 14:01:50,622] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-02-18 14:01:50,622] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-02-18 14:01:50,623] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-02-18 14:01:50,651] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-02-18 14:01:50,665] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-02-18 14:01:50,676] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-02-18 14:01:50,699] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-02-18 14:01:50,700] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=first-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=fist-jb-topic,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-02-18 14:01:50,700] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-02-18 14:01:50,703] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-02-18 14:01:50,750] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(first-topic-0 -> OnlinePartition, fist-jb-topic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-02-18 14:01:50,756] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2024-02-18 14:01:50,766] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-02-18 14:01:50,767] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-02-18 14:01:50,767] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-02-18 14:01:50,767] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-02-18 14:01:50,767] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-02-18 14:01:50,785] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-02-18 14:01:55,795] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-02-18 14:01:55,798] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-02-18 14:01:55,805] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-02-18 14:01:55,811] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-02-18 14:02:28,254] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2024-02-18 14:02:28,255] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-02-18 14:02:28,272] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-02-18 14:02:28,274] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2024-02-18 14:02:28,284] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2024-02-18 14:02:28,289] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 77, 1 -> 95) (kafka.controller.KafkaController)
[2024-02-18 14:02:28,296] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:02:28,303] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-02-18 14:02:28,313] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-02-18 14:02:28,405] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:02:28,508] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-02-18 14:02:38,018] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2024-02-18 14:02:38,018] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-02-18 14:02:38,027] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-02-18 14:02:38,027] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2024-02-18 14:02:38,030] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2024-02-18 14:02:38,033] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:02:38,036] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 77, 1 -> 95, 2 -> 111) (kafka.controller.KafkaController)
[2024-02-18 14:02:38,065] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-02-18 14:02:38,075] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-02-18 14:02:38,137] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:02:38,240] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-02-18 14:05:11,784] DEBUG [Controller id=0] Delete topics listener fired for topics fist-jb-topic to be deleted (kafka.controller.KafkaController)
[2024-02-18 14:05:11,785] INFO [Controller id=0] Starting topic deletion for topics fist-jb-topic (kafka.controller.KafkaController)
[2024-02-18 14:05:11,789] INFO [Topic Deletion Manager 0] Handling deletion for topics fist-jb-topic (kafka.controller.TopicDeletionManager)
[2024-02-18 14:05:11,792] INFO [Topic Deletion Manager 0] Deletion of topic fist-jb-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-02-18 14:05:11,892] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(fist-jb-topic-0 -> NONE) (kafka.controller.KafkaController)
[2024-02-18 14:05:11,894] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=fist-jb-topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2024-02-18 14:05:11,894] INFO [Topic Deletion Manager 0] Handling deletion for topics fist-jb-topic (kafka.controller.TopicDeletionManager)
[2024-02-18 14:05:11,941] INFO [Topic Deletion Manager 0] Deletion of topic fist-jb-topic successfully completed (kafka.controller.TopicDeletionManager)
[2024-02-18 14:05:11,942] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-02-18 14:05:11,943] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-02-18 14:05:15,672] DEBUG [Controller id=0] Delete topics listener fired for topics first-topic to be deleted (kafka.controller.KafkaController)
[2024-02-18 14:05:15,672] INFO [Controller id=0] Starting topic deletion for topics first-topic (kafka.controller.KafkaController)
[2024-02-18 14:05:15,672] INFO [Topic Deletion Manager 0] Handling deletion for topics first-topic (kafka.controller.TopicDeletionManager)
[2024-02-18 14:05:15,672] INFO [Topic Deletion Manager 0] Deletion of topic first-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-02-18 14:05:15,718] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(first-topic-0 -> NONE) (kafka.controller.KafkaController)
[2024-02-18 14:05:15,718] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=first-topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2024-02-18 14:05:15,720] INFO [Topic Deletion Manager 0] Handling deletion for topics first-topic (kafka.controller.TopicDeletionManager)
[2024-02-18 14:05:15,759] INFO [Topic Deletion Manager 0] Deletion of topic first-topic successfully completed (kafka.controller.TopicDeletionManager)
[2024-02-18 14:05:15,760] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2024-02-18 14:05:15,760] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2024-02-18 14:05:34,473] INFO [Controller id=0] New topics: [Set(first-rep)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(first-rep,Some(04Ae-8TNTVSyK5M4-9N40A),Map(first-rep-0 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-02-18 14:05:34,475] INFO [Controller id=0] New partition creation callback for first-rep-0 (kafka.controller.KafkaController)
[2024-02-18 14:06:55,815] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-02-18 14:06:55,818] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-02-18 14:06:55,820] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2024-02-18 14:06:55,821] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-02-18 14:07:02,783] INFO [Controller id=0] New topics: [Set(second-rep)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(second-rep,Some(Al0DqnMSRc2SqYzOrezmdA),Map(second-rep-0 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), second-rep-1 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), second-rep-2 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-02-18 14:07:02,783] INFO [Controller id=0] New partition creation callback for second-rep-0,second-rep-1,second-rep-2 (kafka.controller.KafkaController)
[2024-02-18 14:10:21,262] INFO [Controller id=0] New topics: [Set(third-rep)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(third-rep,Some(MyxRt_DoQjmsjBVIU3qDmw),Map(third-rep-0 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), third-rep-1 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-02-18 14:10:21,262] INFO [Controller id=0] New partition creation callback for third-rep-0,third-rep-1 (kafka.controller.KafkaController)
[2024-02-18 14:11:46,732] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2024-02-18 14:11:46,733] DEBUG [Controller id=0] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2024-02-18 14:11:46,734] DEBUG [Controller id=0] Live brokers: 0,2 (kafka.controller.KafkaController)
[2024-02-18 14:11:46,812] TRACE [Controller id=0] All leaders = second-rep-2 -> (Leader:0,ISR:0,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),third-rep-0 -> (Leader:0,ISR:0,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),second-rep-1 -> (Leader:0,ISR:0,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),second-rep-0 -> (Leader:2,ISR:2,0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),third-rep-1 -> (Leader:2,ISR:2,0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),first-rep-0 -> (Leader:2,ISR:2,0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) (kafka.controller.KafkaController)
[2024-02-18 14:11:46,866] WARN [RequestSendThread controllerId=0] Controller 0 epoch 3 fails to send request (type=StopReplicaRequest, controllerId=0, controllerEpoch=3, brokerEpoch=95, deletePartitions=false, topicStates=StopReplicaTopicState(topicName='second-rep', partitionStates=[StopReplicaPartitionState(partitionIndex=2, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=0, leaderEpoch=0, deletePartition=false)]),StopReplicaTopicState(topicName='first-rep', partitionStates=[StopReplicaPartitionState(partitionIndex=0, leaderEpoch=0, deletePartition=false)]),StopReplicaTopicState(topicName='third-rep', partitionStates=[StopReplicaPartitionState(partitionIndex=0, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=1, leaderEpoch=0, deletePartition=false)])) to broker localhost:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:258)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:11:46,972] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:11:47,019] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-02-18 14:11:47,020] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-02-18 14:11:47,020] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-02-18 14:11:47,021] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2024-02-18 14:11:47,021] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-02-18 14:11:47,022] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-02-18 14:11:47,022] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-02-18 14:11:47,023] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2024-02-18 14:11:47,040] INFO [Controller id=0] Newly added brokers: , deleted brokers: 1, bounced brokers: , all live brokers: 0,2 (kafka.controller.KafkaController)
[2024-02-18 14:11:47,041] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-02-18 14:11:47,041] WARN [RequestSendThread controllerId=0] Controller 0 epoch 3 fails to send request (type=StopReplicaRequest, controllerId=0, controllerEpoch=3, brokerEpoch=95, deletePartitions=false, topicStates=StopReplicaTopicState(topicName='second-rep', partitionStates=[StopReplicaPartitionState(partitionIndex=2, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=0, leaderEpoch=0, deletePartition=false)]),StopReplicaTopicState(topicName='first-rep', partitionStates=[StopReplicaPartitionState(partitionIndex=0, leaderEpoch=0, deletePartition=false)]),StopReplicaTopicState(topicName='third-rep', partitionStates=[StopReplicaPartitionState(partitionIndex=0, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=1, leaderEpoch=0, deletePartition=false)])) to broker localhost:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:276)
	at org.apache.kafka.server.util.ShutdownableThread.pause(ShutdownableThread.java:116)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:239)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:11:47,042] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2024-02-18 14:11:47,042] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-02-18 14:11:47,042] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-02-18 14:11:47,046] INFO [Controller id=0] Broker failure callback for 1 (kafka.controller.KafkaController)
[2024-02-18 14:11:47,047] INFO [Controller id=0] Removed 1 from list of shutting down brokers. (kafka.controller.KafkaController)
[2024-02-18 14:11:47,056] DEBUG [Controller id=0] Unregister BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2024-02-18 14:11:47,058] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 77, 2 -> 111) (kafka.controller.KafkaController)
[2024-02-18 14:11:55,825] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-02-18 14:11:55,827] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-02-18 14:11:55,836] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-02-18 14:11:55,836] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-02-18 14:11:55,837] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(second-rep-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2024-02-18 14:11:55,837] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-02-18 14:11:55,843] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-02-18 14:11:55,843] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-02-18 14:11:55,843] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-02-18 14:16:55,859] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-02-18 14:16:55,864] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-02-18 14:16:55,889] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-02-18 14:16:55,889] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-02-18 14:16:55,890] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(second-rep-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2024-02-18 14:16:55,890] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-02-18 14:16:55,894] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-02-18 14:16:55,894] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-02-18 14:16:55,894] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-02-18 14:21:55,897] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-02-18 14:21:55,904] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-02-18 14:21:55,911] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-02-18 14:21:55,911] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-02-18 14:21:55,911] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(second-rep-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2024-02-18 14:21:55,911] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-02-18 14:21:55,912] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-02-18 14:21:55,913] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-02-18 14:21:55,913] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-02-18 14:22:50,279] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2024-02-18 14:22:50,282] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-02-18 14:22:50,299] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-02-18 14:22:50,301] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2024-02-18 14:22:50,319] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-02-18 14:22:50,326] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:22:50,331] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-02-18 14:22:50,332] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-02-18 14:22:50,332] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-02-18 14:22:50,340] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2024-02-18 14:22:50,344] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 77, 1 -> 174, 2 -> 111) (kafka.controller.KafkaController)
[2024-02-18 14:22:50,432] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:22:50,535] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-02-18 14:22:50,895] DEBUG [Controller id=0] Updating ISRs for partitions: Set(second-rep-0). (kafka.controller.KafkaController)
[2024-02-18 14:22:50,905] DEBUG [Controller id=0] ISR for partition second-rep-0 updated to LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-02-18 14:22:50,917] DEBUG [Controller id=0] Updating ISRs for partitions: Set(second-rep-2). (kafka.controller.KafkaController)
[2024-02-18 14:22:50,925] DEBUG [Controller id=0] ISR for partition second-rep-2 updated to LeaderAndIsr(leader=0, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-02-18 14:22:50,930] DEBUG [Controller id=0] Updating ISRs for partitions: Set(third-rep-1, first-rep-0). (kafka.controller.KafkaController)
[2024-02-18 14:22:50,942] DEBUG [Controller id=0] ISR for partition third-rep-1 updated to LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-02-18 14:22:50,942] DEBUG [Controller id=0] ISR for partition first-rep-0 updated to LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-02-18 14:22:50,944] DEBUG [Controller id=0] Updating ISRs for partitions: Set(third-rep-0, second-rep-1). (kafka.controller.KafkaController)
[2024-02-18 14:22:50,951] DEBUG [Controller id=0] ISR for partition third-rep-0 updated to LeaderAndIsr(leader=0, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-02-18 14:22:50,951] DEBUG [Controller id=0] ISR for partition second-rep-1 updated to LeaderAndIsr(leader=0, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-02-18 14:24:09,287] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2024-02-18 14:24:09,298] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2024-02-18 14:24:09,463] DEBUG [Controller id=0] Read current producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000), Zk path version 1 (kafka.controller.KafkaController)
[2024-02-18 14:24:09,470] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=1000, size=1000) by writing to Zk with path version 2 (kafka.controller.KafkaController)
[2024-02-18 14:25:49,567] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(CvhUFISMQNaBUF5MhV22OA),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-02-18 14:25:49,569] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2024-02-18 14:26:55,914] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-02-18 14:26:55,915] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-02-18 14:26:55,920] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-02-18 14:26:55,921] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-02-18 14:26:55,921] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(second-rep-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2024-02-18 14:26:55,922] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2024-02-18 14:26:55,922] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-02-18 14:26:55,922] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-02-18 14:31:55,900] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-02-18 14:31:55,905] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-02-18 14:31:55,919] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-02-18 14:31:55,919] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-02-18 14:31:55,921] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(second-rep-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2024-02-18 14:31:55,921] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2024-02-18 14:31:55,922] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-02-18 14:31:55,922] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-02-18 14:36:55,922] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-02-18 14:36:55,922] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-02-18 14:36:55,941] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-02-18 14:36:55,942] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-02-18 14:36:55,942] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(second-rep-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2024-02-18 14:36:55,942] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2024-02-18 14:36:55,942] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-02-18 14:36:55,943] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-02-18 14:41:55,941] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-02-18 14:41:55,943] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-02-18 14:41:55,951] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-02-18 14:41:55,951] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-02-18 14:41:55,952] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(second-rep-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2024-02-18 14:41:55,952] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2024-02-18 14:41:55,952] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-02-18 14:41:55,952] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-02-18 14:43:03,051] INFO [Controller id=0] Shutting down broker 2 (kafka.controller.KafkaController)
[2024-02-18 14:43:03,052] DEBUG [Controller id=0] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2024-02-18 14:43:03,054] DEBUG [Controller id=0] Live brokers: 0,1 (kafka.controller.KafkaController)
[2024-02-18 14:43:03,112] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-02-18 14:43:03,113] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-02-18 14:43:03,115] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-02-18 14:43:03,132] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),second-rep-1 -> (Leader:0,ISR:0,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),third-rep-1 -> (Leader:1,ISR:0,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:3,ControllerEpoch:3),first-rep-0 -> (Leader:0,ISR:0,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),second-rep-0 -> (Leader:1,ISR:0,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),second-rep-2 -> (Leader:0,ISR:0,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:3,ControllerEpoch:3),third-rep-0 -> (Leader:0,ISR:0,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:3,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3) (kafka.controller.KafkaController)
[2024-02-18 14:43:03,185] WARN [RequestSendThread controllerId=0] Controller 0 epoch 3 fails to send request (type=LeaderAndIsRequest, controllerId=0, controllerEpoch=3, brokerEpoch=111, partitionStates=[LeaderAndIsrPartitionState(topicName='second-rep', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=2, isr=[0, 1], partitionEpoch=3, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=false, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='third-rep', partitionIndex=1, controllerEpoch=3, leader=1, leaderEpoch=2, isr=[0, 1], partitionEpoch=3, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=false, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='first-rep', partitionIndex=0, controllerEpoch=3, leader=0, leaderEpoch=2, isr=[0, 1], partitionEpoch=3, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=false, leaderRecoveryState=0)], topicIds={second-rep=Al0DqnMSRc2SqYzOrezmdA, third-rep=MyxRt_DoQjmsjBVIU3qDmw, first-rep=04Ae-8TNTVSyK5M4-9N40A}, liveLeaders=(localhost:9092 (id: 0 rack: null), localhost:9093 (id: 1 rack: null))) to broker localhost:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:258)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:43:03,290] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:43:03,402] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:43:03,509] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:43:03,512] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-02-18 14:43:03,513] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-02-18 14:43:03,513] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-02-18 14:43:03,514] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2024-02-18 14:43:03,514] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-02-18 14:43:03,514] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-02-18 14:43:03,515] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-02-18 14:43:03,516] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2024-02-18 14:43:03,555] INFO [Controller id=0] Newly added brokers: , deleted brokers: 2, bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2024-02-18 14:43:03,555] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-02-18 14:43:03,557] WARN [RequestSendThread controllerId=0] Controller 0 epoch 3 fails to send request (type=LeaderAndIsRequest, controllerId=0, controllerEpoch=3, brokerEpoch=111, partitionStates=[LeaderAndIsrPartitionState(topicName='second-rep', partitionIndex=0, controllerEpoch=3, leader=1, leaderEpoch=2, isr=[0, 1], partitionEpoch=3, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=false, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='third-rep', partitionIndex=1, controllerEpoch=3, leader=1, leaderEpoch=2, isr=[0, 1], partitionEpoch=3, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=false, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='first-rep', partitionIndex=0, controllerEpoch=3, leader=0, leaderEpoch=2, isr=[0, 1], partitionEpoch=3, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=false, leaderRecoveryState=0)], topicIds={second-rep=Al0DqnMSRc2SqYzOrezmdA, third-rep=MyxRt_DoQjmsjBVIU3qDmw, first-rep=04Ae-8TNTVSyK5M4-9N40A}, liveLeaders=(localhost:9092 (id: 0 rack: null), localhost:9093 (id: 1 rack: null))) to broker localhost:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:276)
	at org.apache.kafka.server.util.ShutdownableThread.pause(ShutdownableThread.java:116)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:239)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:43:03,557] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2024-02-18 14:43:03,557] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-02-18 14:43:03,557] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-02-18 14:43:03,565] INFO [Controller id=0] Broker failure callback for 2 (kafka.controller.KafkaController)
[2024-02-18 14:43:03,566] INFO [Controller id=0] Removed 2 from list of shutting down brokers. (kafka.controller.KafkaController)
[2024-02-18 14:43:03,661] DEBUG [Controller id=0] Unregister BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2024-02-18 14:43:03,662] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 77, 1 -> 174) (kafka.controller.KafkaController)
[2024-02-18 14:43:05,013] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2024-02-18 14:43:05,014] DEBUG [Controller id=0] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2024-02-18 14:43:05,015] DEBUG [Controller id=0] Live brokers: 0 (kafka.controller.KafkaController)
[2024-02-18 14:43:05,064] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),second-rep-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),third-rep-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),first-rep-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),second-rep-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),second-rep-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),third-rep-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3) (kafka.controller.KafkaController)
[2024-02-18 14:43:05,094] WARN [RequestSendThread controllerId=0] Controller 0 epoch 3 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=3, kraftController=false, type=UNKNOWN, brokerEpoch=174, partitionStates=[UpdateMetadataPartitionState(topicName='second-rep', partitionIndex=2, controllerEpoch=3, leader=0, leaderEpoch=3, isr=[0], zkVersion=4, replicas=[0, 2, 1], offlineReplicas=[2, 1]), UpdateMetadataPartitionState(topicName='third-rep', partitionIndex=0, controllerEpoch=3, leader=0, leaderEpoch=3, isr=[0], zkVersion=4, replicas=[0, 2, 1], offlineReplicas=[2, 1]), UpdateMetadataPartitionState(topicName='second-rep', partitionIndex=1, controllerEpoch=3, leader=0, leaderEpoch=3, isr=[0], zkVersion=4, replicas=[1, 0, 2], offlineReplicas=[1, 2]), UpdateMetadataPartitionState(topicName='first-rep', partitionIndex=0, controllerEpoch=3, leader=0, leaderEpoch=3, isr=[0], zkVersion=4, replicas=[2, 0, 1], offlineReplicas=[2, 1])], liveBrokers=UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='localhost', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='localhost', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker localhost:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:258)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:43:05,207] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:43:05,309] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:43:05,409] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-02-18 14:43:05,410] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-02-18 14:43:05,410] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-02-18 14:43:05,411] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2024-02-18 14:43:05,411] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-02-18 14:43:05,412] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-02-18 14:43:05,412] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-02-18 14:43:05,413] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2024-02-18 14:43:05,414] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:298)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:251)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:43:05,428] INFO [Controller id=0] Newly added brokers: , deleted brokers: 1, bounced brokers: , all live brokers: 0 (kafka.controller.KafkaController)
[2024-02-18 14:43:05,429] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-02-18 14:43:05,429] WARN [RequestSendThread controllerId=0] Controller 0 epoch 3 fails to send request (type: UpdateMetadataRequest=, controllerId=0, controllerEpoch=3, kraftController=false, type=UNKNOWN, brokerEpoch=174, partitionStates=[UpdateMetadataPartitionState(topicName='second-rep', partitionIndex=2, controllerEpoch=3, leader=0, leaderEpoch=3, isr=[0], zkVersion=4, replicas=[0, 2, 1], offlineReplicas=[2, 1]), UpdateMetadataPartitionState(topicName='third-rep', partitionIndex=0, controllerEpoch=3, leader=0, leaderEpoch=3, isr=[0], zkVersion=4, replicas=[0, 2, 1], offlineReplicas=[2, 1]), UpdateMetadataPartitionState(topicName='second-rep', partitionIndex=1, controllerEpoch=3, leader=0, leaderEpoch=3, isr=[0], zkVersion=4, replicas=[1, 0, 2], offlineReplicas=[1, 2]), UpdateMetadataPartitionState(topicName='first-rep', partitionIndex=0, controllerEpoch=3, leader=0, leaderEpoch=3, isr=[0], zkVersion=4, replicas=[2, 0, 1], offlineReplicas=[2, 1])], liveBrokers=UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='localhost', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='localhost', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker localhost:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:276)
	at org.apache.kafka.server.util.ShutdownableThread.pause(ShutdownableThread.java:116)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:239)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:130)
[2024-02-18 14:43:05,432] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2024-02-18 14:43:05,432] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-02-18 14:43:05,432] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-02-18 14:43:05,433] INFO [Controller id=0] Broker failure callback for 1 (kafka.controller.KafkaController)
[2024-02-18 14:43:05,433] INFO [Controller id=0] Removed 1 from list of shutting down brokers. (kafka.controller.KafkaController)
[2024-02-18 14:43:05,486] DEBUG [Controller id=0] Unregister BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2024-02-18 14:43:05,489] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 77) (kafka.controller.KafkaController)
[2024-02-18 14:43:07,017] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-02-18 14:43:07,017] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-02-18 14:43:07,017] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2024-02-18 14:43:07,028] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-46 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-9 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-42 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-21 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-30 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),second-rep-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),third-rep-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),first-rep-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-1 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-34 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-16 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-45 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-12 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-24 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-49 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-0 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-25 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),second-rep-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-37 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-4 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-33 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-15 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-48 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-19 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-28 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-7 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-40 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-3 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-36 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-43 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-10 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-22 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-18 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-31 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),second-rep-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),third-rep-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3),__consumer_offsets-27 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-39 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-6 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:3) (kafka.controller.KafkaController)
[2024-02-18 14:43:12,036] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-02-18 14:43:12,036] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-02-18 14:43:12,036] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2024-02-18 14:44:17,335] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
